<?php


namespace Ecommerce\EcommerceBundle\Command;


use Symfony\Bundle\FrameworkBundle\Command\ContainerAwareCommand;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;
use Symfony\Component\Validator\Constraints\DateTime;

class BillCommand extends ContainerAwareCommand
{
        protected function configure()
        {
//            parent::configure(); // TODO: Change the autogenerated stub
            $this->setDescription('Recuperation de la date de facturation')
                ->addArgument('date', InputArgument::OPTIONAL,  'Date pour laquelle vous souhaitez recuperer  les factures');
        }

        protected function execute(InputInterface $input, OutputInterface $output)
        {
//            parent::execute($input, $output); // TODO: Change the autogenerated stub

//            $date = new DateTime();
            $em = $this->getContainer()->get('doctrine')->getManager();
            $bills =  $em->getRepository('EcommerceEcommerceBundle:Commande')->byDateCommand($input->getArgument('date'));

//            Enregistrement de recuperation de facture sous format PDF
            $output->writeln(count($bills).' bill(s).');

            if (count($bills) > 0)
            {
                $this->getContainer()->get('setNewBill')->dateDirectory();
                $this->getContainer()->get('setNewBill')->makeDateDirectory();
                foreach ($bills as $bill) {
                    $this->getContainer()->get('setNewBill')->returnPDFResponseFromHTML($bill);
                }
            }
        }
}
